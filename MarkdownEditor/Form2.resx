<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>